AUTOMAKE_OPTIONS = foreign

MAINTAINERCLEANFILES = \
    DLVresultParser.hpp \
    DLVresultParser.output \
    HexParser.hpp \
    HexParser.output \
    location.hh \
    position.hh \
    stack.hh

# automake is not aware of those autogenerated files
EXTRA_DIST = \
    DLVresultParser.hpp \
    HexParser.hpp \
    location.hh \
    position.hh \
    stack.hh


bin_PROGRAMS = dlvhex

pkglib_LTLIBRARIES = libdlvhexbase.la


dlvhex_SOURCES = \
    AtomNode.cpp \
    BoostComponentFinder.cpp \
    Component.cpp \
    ComponentFinder.cpp \
    DependencyGraph.cpp \
    dlvhex.cpp \
    FixpointModelGenerator.cpp \
    GuessCheckModelGenerator.cpp \
    GraphBuilder.cpp \
    GraphProcessor.cpp \
    HexParser.ypp \
    HexScanner.lpp \
    OrdinaryModelGenerator.cpp \
    OutputBuilder.cpp \
    ProgramBuilder.cpp \
    ResultContainer.cpp \
    SafetyChecker.cpp \
    HexParserDriver.cpp

AM_CPPFLAGS = \
    -I$(top_srcdir)/include \
    -I$(top_builddir)/src \
    -I$(top_srcdir)/src \
    $(BOOST_CXXFLAGS)

#
# -ldl is for dynamic linking against the external module libs
# -Wl,-rpath is specifying . to be the search path for shared libs
# (dlvhex should use libs it finds in its own directory)
#
dlvhex_LDFLAGS = -ldl -Wl,-rpath,.

#
# dlvhex itself also uses the convenience libs (see below)
#
dlvhex_LDADD = libdlvhexbase.la libaspsolver.la # libplugin.la

#
# don't let automake rename and move the output files of flex/bison,
# this doesn't work for pure C++ parser (yet)
#
.lpp.cpp:
	$(LEXCOMPILE) -o $@ $<
.ypp.cpp:
	$(YACCCOMPILE) -o $@ $<


#
# bison flags
#
#AM_YFLAGS = -d

#
# make convenience lib
#
noinst_LTLIBRARIES = \
                     libaspsolver.la

libdlvhexbase_la_SOURCES = \
    Atom.cpp \
    AtomFactory.cpp \
    AtomSet.cpp \
    ExternalAtom.cpp \
    Error.cpp \
    globals.cpp \
    helper.cpp \
    Literal.cpp \
    PluginContainer.cpp \
    PluginInterface.cpp \
    Program.cpp \
    Repository.cpp \
    Registry.cpp \
    Rule.cpp \
    Term.cpp

#libplugin_la_SOURCES = \
#                      PluginInterface.h

libaspsolver_la_SOURCES = \
    DLVresultParser.ypp \
    DLVresultScanner.lpp \
    DLVresultParserDriver.cpp \
    ASPsolver.cpp \
    ParserDriver.cpp

libaspsolver_la_LIBADD = libdlvhexbase.la
