2006-08-07  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* configure.ac: Allowing non-absolute dlv-path.

	* src/dlvhex/ProcessBuf.cpp (open): Allowing dlv to be executed in
	user-$PATH


2006-08-04  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/dlvhex/AtomSet.h (AtomSet::const_iterator): In order to
	get the STL algorithms working we inherit from std::iterator<>.

2006-07-31  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/PluginInterface.h: New prototype for setOptions().

	* src/dlvhex/dlvhex.cpp (main): Improved option handling with plugins.


2006-07-23  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/Literal.cpp (Literal::operator=): Return *this.

	* src/dlvhex/Atom.cpp: Pass ctor arguments by reference.
	* include/dlvhex/Atom.h: Likewise.

	* include/dlvhex/AtomSet.h (AtomSet::const_iterator::operator->):
	Add operator.

2006-07-19  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/Term.h: Added function isAnon().

	* src/dlvhex/ASPsolver.cpp (callSolver): Debug output added/removed.

	* src/dlvhex/HexParser.ypp: Removed comment.

	* src/dlvhex/Term.cpp: Added isAnon(). Fixed wrong unification
	handling.


2006-07-10  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* m4/doxygen.m4: Fix for newer autoconfs, see Debian Bug #368712.

2006-07-06  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* configure.ac: Add AC_LIBTOOL_DLOPEN.

	* src/dlvhex/Makefile.am (dlvhex_LDFLAGS): Add -static and
	-export-dynamic.

2006-06-21  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>
	
	* configure.ac: Add AC_LIBTOOL_DLOPEN.

	* src/dlvhex/Makefile.am (dlvhex_LDFLAGS): Add -static and
	-export-dynamic.

2006-06-16  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* configure.ac: Changed version number to 1.0. This will now be the
	official dlvhex 1.0 release.
	

2006-06-15  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/Makefile.am: Check versions of bison and flex.

	* src/dlvhex/HexParserDriver.cpp: Include HexFlexLexer.h

	* src/dlvhex/DLVresultParserDriver.cpp: Include DLVresultFlexLexer.h.

	* src/dlvhex/DLVresultParser.ypp: Adapt parser to bison 2.2/2.3.
	* src/dlvhex/DLVresultScanner.lpp: Likewise.
	* src/dlvhex/HexParser.ypp: Likewise.
	* src/dlvhex/HexScanner.lpp: Likewise.

	* include/dlvhex/Makefile.am (noinst_HEADERS): Add
	HexFlexLexer.h and DLVresultFlexLexer.h.

	* include/dlvhex/ExternalAtom.h: Fix warning.
	* src/dlvhex/ExternalAtom.cpp: Likewise.

	* include/dlvhex/HexParserDriver.h (HexFlexLexer): Remove.

	* include/dlvhex/DLVresultParserDriver.h (DLVresultFlexLexer): Remove.

	* include/dlvhex/DLVresultFlexLexer.h: New file.
	* include/dlvhex/HexFlexLexer.h: Likewise.

2006-06-12  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* src/dlvhex/AnswerSet.cpp: Corrected answer set ordering in case of
	weak constraints (higher levels have higher priority).

	* src/dlvhex/ResultContainer.cpp (filterIn): Keep only positive facts
	if filter is used.

	* src/dlvhex/dlvhex.cpp (main): do not try to close dlt-inputstream if
	dlt is not used.


2006-06-07  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/AtomSet.h: New function matchAtom().
	* src/dlvhex/AtomSet.cpp: Likewise.

	* include/dlvhex/Component.h: Prepared input set filtering for
	components.
	* src/dlvhex/Component.cpp (modelGenerator), (evaluate): Likewise.

	* include/dlvhex/NamesTable.h: Corrected error in namespace handling.

	* src/dlvhex/GuessCheckModelGenerator.cpp (compute): Corrected wrong
	behaviour.

	* src/dlvhex/Makefile.am: Removed static linking.

	* src/dlvhex/Term.cpp: Corrected bug in getUnquotedStrings().

	Fixes bug: #25


2006-06-06  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/NamesTable.h: Added compare method for name-iterator.

	* include/dlvhex/Term.h: Return const string& instead of string.

	* src/dlvhex/Atom.cpp: Accelerated Atom< ().

	* src/dlvhex/Term.cpp: Accelerated Term!= () by comparing
	term-name-iterators instead of term-strings.


2006-06-05  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* src/dlvhex/dlvhex.cpp (insertNamespaces), (removeNamespaces),
	(main): Adapted namespace handling to new namestable - strings are now
	stored with their quotes.

	* src/dlvhex/helper.cpp (stringExplode): Do not create a vector
	element if string to explode is empty. This allows for an empty filter
	string to have no effect.


2006-06-04  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/NamesTable.h: Added lookup table to speed up
	name-retrieval.

	* src/dlvhex/Atom.cpp: Improved speed of operator<.

	* src/dlvhex/DLVresultParser.ypp: Removed debug switches.

	* src/dlvhex/Term.cpp (Term): Simplified handling of quoted strings.


2006-05-31  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/Atom.h: Modified the BuiltinPredicate to be closer to
	the parent class Atom.
	* src/dlvhex/Atom.cpp (BuiltinPredicate): Likewise.

	* include/dlvhex/ResultContainer.h: Added workaround to remove DLT
	auxiliary atoms from result.
	* src/dlvhex/ResultContainer.cpp (filterOutDLT): Likewise.
	* src/dlvhex/dlvhex.cpp (main): Likewise.

	Fixes bug: #27


2006-05-24  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/dlvhex/ProcessBuf.h: New file.
	* src/dlvhex/ProcessBuf.cpp: Likewise.

	* configure.ac: Don't create non-existing examples/Makefile.

	* include/dlvhex/Makefile.am (noinst_HEADERS): Add ProcessBuf.h.

	* src/dlvhex/Makefile.am (libaspsolver_la_SOURCES): Add ProcessBuf.cpp.

	* src/dlvhex/DLVresultParserDriver.cpp: Remove returncode
	parameter.
	* include/dlvhex/DLVresultParserDriver.h: Likewise.

	* src/dlvhex/DLVresultParser.ypp: Remove returncode parameter.
	Allow empty input (-silent).

	* src/dlvhex/ASPsolver.cpp (ASPsolver::callSolver): Outsource fork
	code to ProcessBuf.

	* include/dlvhex/ASPsolver.h (ASPsolver::callSolver): Use a
	reference to const std::string as program parameter.

2006-05-20  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* Makefile.am: Removed example directory.

	* bootstrap.sh: Added glibtoolize if libtoolize is not found (MacOS).

	* examples/Makefile.am: Removed.

	* include/dlvhex/Atom.h: Reintroduced the usage of Terms in builtins
	to enable namespace handling for builtin atoms.

	* src/dlvhex/ASPsolver.cpp (callSolver): Improved method of calling
	dlv, avoiding temp-file and problems on MacOS.
	* src/dlvhex/DLVresultParser.ypp: Likewise.

	* src/dlvhex/HexParser.ypp: Calling builtin-constructor with terms.

	* src/dlvhex/HexScanner.lpp: Allowing empty string constants.

	* src/dlvhex/Makefile.am: Enabled static linking.

	* src/dlvhex/dlvhex.cpp (main): NameTable debug output correction.

	Fixes bug: #26, #29


2006-05-16  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/AnswerSet.h: Added operator<< for debugging
	purposes.
	
	* include/dlvhex/AtomSet.h: Changed return value of print() from void
	to std::ostream to be compatible with other print() functions.
	* src/dlvhex/AtomSet.cpp: Likewise.

	* include/dlvhex/HexParserDriver.h: Added function setOrigin() to set
	a filename associated with the input to parse.

	* src/dlvhex/AnswerSet.cpp (operator<): Corrected wrong operator
	behaviour. Added operator<< for debugging purposes.

	* src/dlvhex/GuessCheckModelGenerator.cpp (compute): Corrected
	algorithm.

	* src/dlvhex/HexParser.ypp: Registered filename to Rule constructor.

	* src/dlvhex/HexParserDriver.cpp (setOrigin), (parse): Added function
	setOrigin(). Added correct error handling to function parse when
	called with istream.

	* src/dlvhex/SafetyChecker.cpp (throw): Corrected safety error message
	handling. Modified verbose output.

	* src/dlvhex/dlvhex.cpp (main): Added passing of filename to parser
	driver.

	Fixes bug: #13, #16


2006-05-13  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* src/dlvhex/Atom.cpp (operator<): Throw proper exception in case of
	arity mismatch.

	* src/dlvhex/HexParser.ypp: Catch exception coming from creating a new
	Atom or adding it to the factory.

	Fixes bug: #22, 23


2006-05-10  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/Atom.h: Modified BuiltinPredicate to consist of a
	general string instead of of two terms an an operator.

	* src/dlvhex/ASPsolver.cpp (callSolver): The maxint directive for dlv
	has to prepend the program instead of being appended at the end.
	Corrected.

	* src/dlvhex/Atom.cpp (operator<): Removed arity assertion for
	comparisons of atoms with variable predicates.

	* src/dlvhex/AtomSet.cpp: Corrected predicateMatches() operator
	parameters.

	* src/dlvhex/HexParser.ypp: Modified parsing of builtin predicates to
	fit class modifications. Added parsing of #int() predicate.

	* src/dlvhex/SafetyChecker.cpp (testRules): Included variable
	predicate in body in list of safe variables.

	Fixes bug: #19, #20, #21


2006-05-09  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/Term.h: Added methods Term::registerAuxiliaryName()
	and Term::getAuxiliaryNames() as an interface for the list of
	auxiliary names.
	* src/dlvhex/Term.cpp: Likewise.

	* src/dlvhex/ExternalAtom.cpp (constructor): Adapted to call new
	Term::registerAuxiliaryName().
	* src/dlvhex/Rule.cpp (WeakConstraint constructor): Likewise.
	* src/dlvhex/dlvhex.cpp (main): Likewise.


2006-05-07  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* src/dlvhex/ASPsolver.cpp (ASPsolver::callSolver): Extended verbose
	output in case of solver failure.

	* src/dlvhex/ExternalAtom.cpp (ExternalAtom::operator==): Corrected
	equality operator.

	* src/dlvhex/dlvhex.cpp (main): Improved help output. Added command
	line switch --noeval. Added verbose output for plugin search
	locations.


2006-05-05  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/Atom.h: Made operator!= nonvirtual.

	* include/dlvhex/Error.h: Cleaned up error handling.

	* include/dlvhex/ExternalAtom.h: Introduced second operator== for
	comparison with Atom&. Two comparison functions, for Atom& and for
	ExternalAtom&, are needed.
	* src/dlvhex/Error.cpp: Likewise.

	* src/dlvhex/HexParser.ypp: Catching exceptions from propositional
	atom creation.

	* src/dlvhex/HexParserDriver.cpp: (parse): Adapted to new error
	handling.
	* src/dlvhex/dlvhex.cpp: (main): Likewise.


2006-05-04  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/Atom.h (GetArguments): Made method virtual.

	* include/dlvhex/ExternalAtom.h (GetAguments): Made method virtual.

	* src/dlvhex/ExternalAtom.cpp: Implemented operator==.

	* src/dlvhex/GraphBuilder.cpp (run): Added proper dependency handling
	of chained external atoms within one rule body.


2006-05-04  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/PluginInterface.h: Changed rewriter stream types to pointers.

	* include/dlvhex/globals.h: Added string to be passed to the ASP
	solver for adding a maxint-directive.

	* src/dlvhex/ASPsolver.cpp (callSolver): Added maxint-directive to
	the program to be solved, from a global variable set in the Hex-parser.

	* src/dlvhex/AnswerSet.cpp (moreExpensiveThan): Corrected error in
	reading weights of the specified weight-vector.

	* src/dlvhex/Atom.cpp (Constructor): Moved assertion for nonground
	predicate names to initialization of non-propositional atoms. Added
	SyntaxError in case of variable propositional atoms.

	* src/dlvhex/HexParser.ypp: Added parsing of maxint-directive.
	Admitted empty parentheses for external atoms with output arity zero.

	* src/dlvhex/dlvhex.cpp (main): Corrected handling of streams and
	rewriters.

	* src/dlvhex/globals.cpp: Added string for maxint-directive.


2006-05-03  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/AnswerSet.h: New File.

	* include/dlvhex/Makefile.am: Added AnswerSet.h.

	* include/dlvhex/OutputBuilder.h: Changed all AtomSet to AnswerSet.

	* include/dlvhex/Program.h: Added addition and retrieval for weak
	constraints.
	* src/dlvhex/Program.cpp: Likewise.

	* include/dlvhex/ResultContainer.h: Changed type of result from
	std::vector<AtomSet> to std::set<AnswerSetPtr,
	ResultContainer::AnswerSetPtrCompare>. Added comparison operator
	for AnswerSetPtrCompare. Added handling of weak constraint-
	auxiliary predicate. Added vector for optimal costs.
	* src/dlvhex/ResultContainer.cpp: Likewise.

	* include/dlvhex/Rule.h: Added class for weak constraints, derived
	from Rule.
	* src/dlvhex/Rule.cpp: Likewise.

	* src/dlvhex/AnswerSet.cpp: New file.

	* src/dlvhex/DLVresultParser.ypp: Introduced number type for
	integer handling.
	* src/dlvhex/DLVresultScanner.lpp: Likewise.

	* src/dlvhex/HexParser.ypp: Added weak constraint handling.
	Introduced number type for integer handling. Added predicate syntax
	for builtins.

	* src/dlvhex/HexScanner.lpp: Introduced number type for integer
	handling.

	* src/dlvhex/Makefile.am: Added AnswerSet.cpp.

	* src/dlvhex/OutputBuilder.cpp (buildAnswerSet): Added weight
	output for answer set costs.

	* src/dlvhex/ParserDriver.cpp: Corrected bug of wrong line output
	in case of syntax errors.

	* src/dlvhex/Term.cpp (operator!=) Corrected bug in handling
	NULLCONST.

	* src/dlvhex/dlvhex.cpp (main): Reactivated dlt preparsing. Added
	support for weak constraints.

	Fixes bug: #9, #10, #11
	

2006-05-02  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/PluginInterface.h (setOptions): Modified argument type.

	* src/dlvhex/AtomSet.cpp (operator<) Corrected semantics of AtomSet
	comparison.

	* src/dlvhex/GuessCheckModelGenerator.cpp (compute): Corrected bug in
	creation of guessing rules - replacement atoms for external atoms were
	created without input arguments.

	* src/dlvhex/dlvhex.cpp (main): Updated option handling, passing
	unparsed options to plugins and aborting, if any options are left
	after plugins. Commented out dlt-preparsing. Activated
	plugin-rewriters.

	* src/testsuite/dlvhex/TestGraphProcessor.cpp (testSimple): Removed
	debug output.

	* src/testsuite/dlvhex/TypeTest.cpp (testConstruction): Added test
	for set of AtomSet comparison.


2006-04-25  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* Makefile.am: Added doxygen stuff to EXTRA_DIST files.

	* README: Added.

	* ChangeLog: Added.

	* configure.ac: Removed bison/flex checks, commented back in boost-header
	checks.

	* examples/Makefile.am: Removed shop.owl (needs other plugins, not
	useful as pure dlvhex-example).

	* src/dlvhex/Makefile.am: Reformat. Added bison output files to
	EXTRA_DIST.

	* src/dlvhex/ASPsolver.cpp (callSolver): Corrected debug-output.

	* src/dlvhex/AtomFactory.cpp (reset): Added reset() to clear factory.
	* include/dlvhex/AtomFactory.h: Likewise.

	* src/dlvhex/AtomSet.cpp (multiplySets): Added check for minimality.

	* src/dlvhex/Literal.cpp (operator=): Added assignment operator.
	* include/dlvhex/Literal.h: Likewise.

	* src/dlvhex/dlvhex.cpp (main): Prepared integration of
	plugin-rewriters.

	* include/dlvhex/Makefile.am: Added missing header files.

	* include/dlvhex/BoostComponentFinder.h: Removed superficial
	header-includes.

	* include/dlvhex/ComponentFinder.h: Added (empty) virtual Destructor.

	* include/dlvhex/DLVresultFlexLexer.h: Removed.

	* include/dlvhex/AtomSet.h: Added operator< for comparison of sets of AtomSets (does
	not work yet).

	* src/testsuite/dlvhex/ASPsolverTest.cpp (tearDown): Added reset of
	AtomFactory after each test in order to avoid conflicting atoms.

	* src/testsuite/dlvhex/TestGraphProcessor.cpp: Added.

	* src/testsuite/dlvhex/Makefile.am: Added dlvhex-sources necessary for
	the new TestGraphProcessor class.

	* include/testsuite/dlvhex/Makefile.am: Added TestGraphProcessor.h

